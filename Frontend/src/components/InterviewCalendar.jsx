import React, { useState } from "react";

const InterviewCalendar = ({ interviews = [] }) => {
    const [filter, setFilter] = useState("all");

    // Mock data if no interviews provided
    const mockInterviews = [
        {
            id: 1,
            position: "Nh√¢n vi√™n Marketing",
            company: "C√¥ng ty TNHH Plasma",
            datetime: "10 gi·ªù 00 ph√∫t - 30/5/2025",
            format: "Tr·ª±c ti·∫øp",
            status: "ƒê√£ l√™n l·ªãch",
            note: "Mang theo CV v√† b·∫±ng c·∫•p",
            location: "T·∫ßng 5, T√≤a nh√† ABC, Qu·∫≠n 1, TP.HCM",
            interviewer: "Ms. Lan - Ph√≤ng Nh√¢n s·ª±",
        },
        {
            id: 2,
            position: "Developer Frontend",
            company: "C√¥ng ty TNHH TechViet",
            datetime: "14 gi·ªù 30 ph√∫t - 28/5/2025",
            format: "Tr·ª±c tuy·∫øn",
            status: "ƒêang ph·ªèng v·∫•n",
            note: "Ph·ªèng v·∫•n k·ªπ thu·∫≠t v·ªõi team dev",
            meetingLink: "https://meet.google.com/abc-defg-hij",
            interviewer: "Mr. D≈©ng - Technical Lead",
        },
        {
            id: 3,
            position: "UI/UX Designer",
            company: "C√¥ng ty TNHH Creative",
            datetime: "09 gi·ªù 00 ph√∫t - 25/5/2025",
            format: "Tr·ª±c tuy·∫øn",
            status: "ƒê√£ ho√†n th√†nh",
            note: "ƒê√£ ho√†n th√†nh v√≤ng 1",
            interviewer: "Ms. H∆∞∆°ng - Design Team",
        },
    ];

    const displayInterviews = interviews.length > 0 ? interviews : mockInterviews;

    const getStatusBadge = (status) => {
        const badges = {
            "ƒê√£ l√™n l·ªãch": {
                bg: "bg-yellow-200",
                text: "text-black",
                label: "ƒê√£ l√™n l·ªãch",
            },
            "ƒêang ph·ªèng v·∫•n": {
                bg: "bg-blue-200",
                text: "text-black",
                label: "ƒêang ph·ªèng v·∫•n",
            },
            "ƒê√£ ho√†n th√†nh": {
                bg: "bg-green-200",
                text: "text-black",
                label: "ƒê√£ ho√†n th√†nh",
            },
        };

        const badge = badges[status] || badges["ƒê√£ l√™n l·ªãch"];

        return (
            <div className={`${badge.bg} ${badge.text} px-4 py-2 rounded-full text-sm font-bold inline-block`}>
                {badge.label}
            </div>
        );
    };

    const filteredInterviews =
        filter === "all" ? displayInterviews : displayInterviews.filter((interview) => interview.status === filter);

    const filterOptions = [
        { value: "all", label: "T·∫•t c·∫£", count: displayInterviews.length },
        {
            value: "ƒê√£ l√™n l·ªãch",
            label: "ƒê√£ l√™n l·ªãch",
            count: displayInterviews.filter((i) => i.status === "ƒê√£ l√™n l·ªãch").length,
        },
        {
            value: "ƒêang ph·ªèng v·∫•n",
            label: "ƒêang ph·ªèng v·∫•n",
            count: displayInterviews.filter((i) => i.status === "ƒêang ph·ªèng v·∫•n").length,
        },
        {
            value: "ƒê√£ ho√†n th√†nh",
            label: "ƒê√£ ho√†n th√†nh",
            count: displayInterviews.filter((i) => i.status === "ƒê√£ ho√†n th√†nh").length,
        },
    ];

    const handleJoinInterview = (interview) => {
        if (interview.format === "Tr·ª±c tuy·∫øn") {
            window.open(interview.meetingLink || "#", "_blank");
        } else {
            alert(`ƒê·ªãa ƒëi·ªÉm ph·ªèng v·∫•n: ${interview.location}`);
        }
    };

    return (
        <div className="bg-white border border-gray-300 rounded-3xl p-8 w-full">
            {/* Header */}
            <div className="mb-8">
                <h2 className="text-green-800 text-3xl font-black">L·ªäCH PH·ªéNG V·∫§N</h2>
                <p className="text-gray-600 mt-2">Qu·∫£n l√Ω v√† theo d√µi l·ªãch ph·ªèng v·∫•n c·ªßa b·∫°n</p>
            </div>

            {/* Filter Tabs */}
            <div className="mb-6">
                <div className="flex space-x-2">
                    {filterOptions.map((option) => (
                        <button
                            key={option.value}
                            onClick={() => setFilter(option.value)}
                            className={`px-4 py-2 rounded-lg font-semibold transition-colors ${
                                filter === option.value
                                    ? "bg-green-800 text-white"
                                    : "bg-gray-200 text-gray-700 hover:bg-gray-300"
                            }`}
                        >
                            {option.label} ({option.count})
                        </button>
                    ))}
                </div>
            </div>

            {/* Interviews List */}
            <div className="space-y-4">
                {filteredInterviews.length === 0 ? (
                    <div className="text-center py-12">
                        <div className="text-gray-400 text-6xl mb-4">üìÖ</div>
                        <h3 className="text-xl font-bold text-gray-600 mb-2">
                            {filter === "all"
                                ? "Ch∆∞a c√≥ l·ªãch ph·ªèng v·∫•n n√†o"
                                : `Kh√¥ng c√≥ l·ªãch ph·ªèng v·∫•n "${filterOptions.find((f) => f.value === filter)?.label}"`}
                        </h3>
                        <p className="text-gray-500">
                            {filter === "all"
                                ? "C√°c l·ªãch ph·ªèng v·∫•n s·∫Ω xu·∫•t hi·ªán ·ªü ƒë√¢y khi b·∫°n ƒë∆∞·ª£c m·ªùi ph·ªèng v·∫•n"
                                : "Th·ª≠ chuy·ªÉn sang tab kh√°c ƒë·ªÉ xem c√°c l·ªãch ph·ªèng v·∫•n"}
                        </p>
                    </div>
                ) : (
                    filteredInterviews.map((interview) => (
                        <div key={interview.id} className="bg-white border border-gray-300 rounded-3xl p-6 mb-4">
                            <div className="grid grid-cols-3 gap-8">
                                {/* Position & Company Info */}
                                <div className="space-y-4">
                                    <div>
                                        <label className="text-green-800 text-lg font-bold block mb-1">V·ªã tr√≠:</label>
                                        <span className="text-black text-lg font-semibold">{interview.position}</span>
                                    </div>

                                    <div>
                                        <label className="text-green-800 text-lg font-bold block mb-1">
                                            Doanh nghi·ªáp:
                                        </label>
                                        <span className="text-black text-lg font-semibold">{interview.company}</span>
                                    </div>

                                    <div>
                                        <label className="text-green-800 text-lg font-bold block mb-1">
                                            L·ªãch ph·ªèng v·∫•n:
                                        </label>
                                        <span className="text-black text-lg font-semibold">{interview.datetime}</span>
                                    </div>
                                </div>

                                {/* Format & Status */}
                                <div className="space-y-4">
                                    <div>
                                        <label className="text-green-800 text-lg font-bold block mb-1">
                                            H√¨nh th·ª©c:
                                        </label>
                                        <span className="text-black text-lg font-semibold">{interview.format}</span>
                                    </div>

                                    <div>
                                        <label className="text-green-800 text-lg font-bold block mb-1">
                                            Tr·∫°ng th√°i:
                                        </label>
                                        {getStatusBadge(interview.status)}
                                    </div>

                                    <div>
                                        <label className="text-green-800 text-lg font-bold block mb-1">
                                            Ng∆∞·ªùi ph·ªèng v·∫•n:
                                        </label>
                                        <span className="text-black text-lg font-semibold">
                                            {interview.interviewer}
                                        </span>
                                    </div>
                                </div>

                                {/* Notes & Actions */}
                                <div className="space-y-4">
                                    <div>
                                        <label className="text-green-800 text-lg font-bold block mb-1">Ghi ch√∫:</label>
                                        <span className="text-black text-lg font-semibold">{interview.note}</span>
                                    </div>

                                    {interview.status === "ƒê√£ l√™n l·ªãch" && (
                                        <div className="mt-4">
                                            <button
                                                onClick={() => handleJoinInterview(interview)}
                                                className="bg-green-800 text-white px-6 py-3 rounded-lg font-bold text-lg hover:bg-green-900 transition-colors"
                                            >
                                                {interview.format === "Tr·ª±c tuy·∫øn"
                                                    ? "Tham gia ph·ªèng v·∫•n"
                                                    : "Xem ƒë·ªãa ƒëi·ªÉm"}
                                            </button>
                                        </div>
                                    )}
                                </div>
                            </div>

                            {/* Additional Info */}
                            {interview.status === "ƒê√£ l√™n l·ªãch" && (
                                <div className="mt-6">
                                    {interview.format === "Tr·ª±c tuy·∫øn" ? (
                                        <div className="p-4 bg-blue-50 border border-blue-200 rounded-lg">
                                            <h4 className="text-blue-800 font-bold mb-2">
                                                üìπ H∆∞·ªõng d·∫´n ph·ªèng v·∫•n tr·ª±c tuy·∫øn:
                                            </h4>
                                            <ul className="text-blue-700 text-sm space-y-1">
                                                <li>‚Ä¢ Ki·ªÉm tra k·∫øt n·ªëi internet ·ªïn ƒë·ªãnh tr∆∞·ªõc 15 ph√∫t</li>
                                                <li>‚Ä¢ Chu·∫©n b·ªã camera v√† micro ho·∫°t ƒë·ªông t·ªët</li>
                                                <li>‚Ä¢ Ch·ªçn kh√¥ng gian y√™n tƒ©nh, √°nh s√°ng ƒë·∫ßy ƒë·ªß</li>
                                                <li>‚Ä¢ Tham gia ph√≤ng h·ªçp tr∆∞·ªõc 5-10 ph√∫t</li>
                                            </ul>
                                        </div>
                                    ) : (
                                        <div className="p-4 bg-green-50 border border-green-200 rounded-lg">
                                            <h4 className="text-green-800 font-bold mb-2">
                                                üè¢ Th√¥ng tin ph·ªèng v·∫•n tr·ª±c ti·∫øp:
                                            </h4>
                                            <div className="text-green-700 text-sm space-y-1">
                                                <p>
                                                    <strong>ƒê·ªãa ch·ªâ:</strong> {interview.location}
                                                </p>
                                                <p>
                                                    <strong>L∆∞u √Ω:</strong> Vui l√≤ng c√≥ m·∫∑t tr∆∞·ªõc 15 ph√∫t v√† mang theo
                                                    CV b·∫£n c·ª©ng
                                                </p>
                                            </div>
                                        </div>
                                    )}
                                </div>
                            )}
                        </div>
                    ))
                )}
            </div>

            {/* Quick Stats */}
            {displayInterviews.length > 0 && (
                <div className="mt-8 p-6 bg-gray-50 rounded-xl">
                    <h4 className="text-lg font-bold text-gray-800 mb-4">üìä Th·ªëng k√™ ph·ªèng v·∫•n</h4>
                    <div className="grid grid-cols-4 gap-4 text-center">
                        <div className="bg-white p-4 rounded-lg">
                            <div className="text-2xl font-bold text-blue-600">{displayInterviews.length}</div>
                            <div className="text-sm text-gray-600">T·ªïng l·ªãch h·∫πn</div>
                        </div>
                        <div className="bg-white p-4 rounded-lg">
                            <div className="text-2xl font-bold text-yellow-600">
                                {displayInterviews.filter((i) => i.status === "ƒê√£ l√™n l·ªãch").length}
                            </div>
                            <div className="text-sm text-gray-600">S·∫Øp t·ªõi</div>
                        </div>
                        <div className="bg-white p-4 rounded-lg">
                            <div className="text-2xl font-bold text-green-600">
                                {displayInterviews.filter((i) => i.status === "ƒê√£ ho√†n th√†nh").length}
                            </div>
                            <div className="text-sm text-gray-600">Ho√†n th√†nh</div>
                        </div>
                        <div className="bg-white p-4 rounded-lg">
                            <div className="text-2xl font-bold text-purple-600">
                                {displayInterviews.filter((i) => i.format === "Tr·ª±c tuy·∫øn").length}
                            </div>
                            <div className="text-sm text-gray-600">Tr·ª±c tuy·∫øn</div>
                        </div>
                    </div>
                </div>
            )}
        </div>
    );
};

export default InterviewCalendar;
